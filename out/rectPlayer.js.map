{"version":3,"sources":["webpack://rect-player/webpack/universalModuleDefinition","webpack://rect-player/./RectPlayer/dependence/extends.js","webpack://rect-player/./RectPlayer/Model/PlayerModel.ts","webpack://rect-player/./RectPlayer/NeteaseCore.ts","webpack://rect-player/./RectPlayer/RectPlayer.ts","webpack://rect-player/./RectPlayer/RectplayerTemplateResolver.ts","webpack://rect-player/./RectPlayer/SongSelecter.ts","webpack://rect-player/./RectPlayer/Utils.ts","webpack://rect-player/./RectPlayer/dependence/Tasks.ts","webpack://rect-player/webpack/bootstrap","webpack://rect-player/webpack/runtime/define property getters","webpack://rect-player/webpack/runtime/hasOwnProperty shorthand","webpack://rect-player/webpack/runtime/make namespace object","webpack://rect-player/webpack/startup"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;ACVA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACZY;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,yBAAyB,GAAG,gBAAgB,GAAG,aAAa,GAAG,wBAAwB,GAAG,cAAc,GAAG,cAAc,GAAG,aAAa,GAAG,gBAAgB;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B,gBAAgB;;;;;;;;;;;;;;;;AC5EH;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mBAAmB;AACnB,cAAc,mBAAO,CAAC,sCAAS;AAC/B,oBAAoB,mBAAO,CAAC,8DAAqB;AACjD,cAAc,mBAAO,CAAC,4DAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,4BAA4B;AAC5B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uDAAuD,kCAAkC,EAAE;AAC3F;AACA,+DAA+D;AAC/D,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,4BAA4B;AAC5B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,gCAAgC;AAChC;AACA;AACA,gCAAgC;AAChC,4BAA4B;AAC5B,wBAAwB;AACxB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mBAAmB;;;;;;;;;;;;;;;;ACpMN;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,kBAAkB;AAClB,cAAc,mBAAO,CAAC,sCAAS;AAC/B,oBAAoB,mBAAO,CAAC,8DAAqB;AACjD,cAAc,mBAAO,CAAC,4DAAoB;AAC1C,mCAAmC,mBAAO,CAAC,gFAA8B;AACzE,oBAAoB,mBAAO,CAAC,kDAAe;AAC3C,qBAAqB,mBAAO,CAAC,oDAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,8CAA8C;AAC9C,+CAA+C;AAC/C,6CAA6C;AAC7C,6CAA6C;AAC7C,uDAAuD;AACvD,uDAAuD;AACvD,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oDAAoD,EAAE;AAChG,6CAA6C,sDAAsD,EAAE;AACrG,4CAA4C,sDAAsD,EAAE;AACpG,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gGAAgG,EAAE;AACpI,SAAS;AACT;AACA;AACA,kCAAkC,kGAAkG,EAAE;AACtI,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,gBAAgB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc,GAAG,eAAe,GAAG,eAAe;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,eAAekBAAkB;;;;;;;;;;;;;;;;ACrcL;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,8DAAqB;AACjD,cAAc,mBAAO,CAAC,sCAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,gBAAgB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,+BAA+B;;;;;;;;;;;;;;;;ACvJlB;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,oBAAoB;AACpB,oBAAoB,mBAAO,CAAC,8DAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,oBAAoB;;;;;;;;;;;;;;;;AChEP;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,aAAa;;;;;;;;;;;;;;;;;;;;AC3IA;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gBAAgB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAkB;AAClB;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,UAAU;AACnE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,aAAa;;;;;;;UC9Tb;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"rectPlayer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nexport { __extends }","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RectPlayerControl = exports.PlayMode = exports.Point = exports.RectPlayerOption = exports.Avatar = exports.Author = exports.Track = exports.PlayList = void 0;\r\n/**\r\n * 播放列表信息\r\n * */\r\nvar PlayList = /** @class */ (function () {\r\n    function PlayList() {\r\n    }\r\n    return PlayList;\r\n}());\r\nexports.PlayList = PlayList;\r\n/**\r\n * 歌曲信息\r\n * */\r\nvar Track = /** @class */ (function () {\r\n    function Track() {\r\n    }\r\n    return Track;\r\n}());\r\nexports.Track = Track;\r\n/**\r\n * 歌手信息\r\n * */\r\nvar Author = /** @class */ (function () {\r\n    function Author() {\r\n    }\r\n    return Author;\r\n}());\r\nexports.Author = Author;\r\n/**\r\n * 封面信息\r\n * */\r\nvar Avatar = /** @class */ (function () {\r\n    function Avatar() {\r\n    }\r\n    return Avatar;\r\n}());\r\nexports.Avatar = Avatar;\r\n/**\r\n *\r\n * */\r\nvar RectPlayerOption = /** @class */ (function () {\r\n    function RectPlayerOption() {\r\n    }\r\n    return RectPlayerOption;\r\n}());\r\nexports.RectPlayerOption = RectPlayerOption;\r\n/**\r\n * 播放器控件\r\n */\r\nvar RectPlayerControl = /** @class */ (function () {\r\n    function RectPlayerControl() {\r\n    }\r\n    return RectPlayerControl;\r\n}());\r\nexports.RectPlayerControl = RectPlayerControl;\r\n/**\r\n *\r\n */\r\nvar Point = /** @class */ (function () {\r\n    function Point() {\r\n    }\r\n    return Point;\r\n}());\r\nexports.Point = Point;\r\n/**\r\n *\r\n */\r\nvar PlayMode;\r\n(function (PlayMode) {\r\n    PlayMode[\"normal\"] = \"normal\";\r\n    PlayMode[\"repeat\"] = \"repeat\";\r\n    PlayMode[\"repeatone\"] = \"repeatone\";\r\n    PlayMode[\"random\"] = \"random\";\r\n})(PlayMode || (PlayMode = {}));\r\nexports.PlayMode = PlayMode;\r\n","\"use strict\";\r\n/**\r\n *\r\n * @Y_Theta http://blog.y-theta.cn\r\n *\r\n * PlayerCoreContract\r\n *\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NeteaseCore = void 0;\r\nvar Utils_1 = require(\"./Utils\");\r\nvar PlayerModel_1 = require(\"./Model/PlayerModel\");\r\nvar Tasks_1 = require(\"./dependence/Tasks\");\r\n/** 网易云音乐资源 */\r\nvar NeteaseCore = /** @class */ (function () {\r\n    function NeteaseCore() {\r\n        //#endregion\r\n        this._playlist = null;\r\n        this._loaded = false;\r\n        this._timeout = 200; //单首歌url获取超时 平均\r\n        this._timeouttimer = 0;\r\n    }\r\n    /** 初始化播放列表 */\r\n    NeteaseCore.prototype.Init = function (url, callback) {\r\n        var _this = this;\r\n        var id = 0;\r\n        if (typeof url == \"string\") {\r\n            if (!/[^0-9]/.exec(url)) {\r\n                id = Number.parseInt(url);\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            id = url;\r\n        }\r\n        Tasks_1.Tasks.Ajax({\r\n            url: NeteaseCore._playlistapi + \"id=\" + id,\r\n            prepare: function () {\r\n                Utils_1.Utils.Log(\"playlist : \" + id);\r\n            },\r\n            success: function (args) {\r\n                _this._playlist = new PlayerModel_1.PlayList();\r\n                var orilist = null;\r\n                try {\r\n                    var pl_1 = _this._playlist;\r\n                    orilist = JSON.parse(args.stepresult);\r\n                    if (orilist && orilist.code && orilist.code === 200) {\r\n                        var oripl = orilist.playlist;\r\n                        pl_1.avatarUrl = oripl.coverImgUrl;\r\n                        pl_1.nickname = oripl.name;\r\n                        pl_1.signature = oripl.id;\r\n                        pl_1.tracks = new Array();\r\n                        oripl.tracks.forEach(function (t) {\r\n                            pl_1.tracks.push({\r\n                                id: t.id,\r\n                                name: t.name,\r\n                                src: null,\r\n                                al: {\r\n                                    id: t.al.id,\r\n                                    name: t.al.name,\r\n                                    url: t.al.picUrl,\r\n                                },\r\n                                ar: _this.getauthor(t.ar),\r\n                                valid: true\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                catch (_a) { }\r\n                callback(_this._playlist);\r\n            },\r\n        }).Execute();\r\n    };\r\n    /** 更新播放列表 */\r\n    NeteaseCore.prototype.Update = function (callback, ids) {\r\n        var _this = this;\r\n        var updatelist = null;\r\n        if (ids != undefined) {\r\n            updatelist = [];\r\n            typeof ids == \"number\" ? updatelist.push(ids) : updatelist.concat(ids);\r\n        }\r\n        var updatetask = [];\r\n        if (updatelist) {\r\n            updatelist.forEach(function (v) {\r\n                var track = _this._playlist.tracks[v];\r\n                updatetask.push(_this.ajaxsongsrc(track));\r\n            });\r\n        }\r\n        else {\r\n            this._playlist.tracks.forEach(function (v) {\r\n                updatetask.push(_this.ajaxsongsrc(v));\r\n            });\r\n        }\r\n        Tasks_1.Tasks.WaitAll(updatetask, function () { return callback(_this._playlist); }, null, Tasks_1.TaskOrder.Default);\r\n    };\r\n    NeteaseCore.prototype.Add = function (url, callback, pos) { };\r\n    NeteaseCore.prototype.Remove = function (ids, callback) { };\r\n    /** 更新单曲的音频源的任务 */\r\n    NeteaseCore.prototype.ajaxsongsrc = function (track) {\r\n        return Tasks_1.Tasks.Ajax({\r\n            url: NeteaseCore._tracksrcapi + \"id=\" + track.id + \"&br=320000\",\r\n            prepare: function () {\r\n                Utils_1.Utils.Log(\"Song - s -\" + track.id);\r\n            },\r\n            success: function (args) {\r\n                Utils_1.Utils.Log(\"Song - e -\" + track.id);\r\n                var url = null;\r\n                try {\r\n                    url = JSON.parse(args.stepresult).data[0].url;\r\n                }\r\n                catch (_a) { }\r\n                track.valid = !!url;\r\n                track.src = url;\r\n            },\r\n        });\r\n    };\r\n    // private getneteasePlayListbyID(id: number) {\r\n    //     let orilist: any = null;\r\n    //     Utils.Ajax({\r\n    //         async: true,\r\n    //         url: \"http://api.y-theta.cn/Netease/playlist/detail?id=\" + id,\r\n    //         success: (data: string) => {\r\n    //             try {\r\n    //                 orilist = JSON.parse(data);\r\n    //             } catch {}\r\n    //             if (orilist && orilist.code && orilist.code === 200) {\r\n    //                 let oripl = orilist.playlist;\r\n    //                 let pl = new PlayList();\r\n    //                 pl.avatarUrl = oripl.coverImgUrl;\r\n    //                 pl.nickname = oripl.name;\r\n    //                 pl.signature = oripl.id;\r\n    //                 pl.tracks = new Array<Track>();\r\n    //                 this.Playlist = pl;\r\n    //                 oripl.tracks.forEach((t: any) => {\r\n    //                     pl.tracks.push({\r\n    //                         id: t.id,\r\n    //                         name: t.name,\r\n    //                         src: null,\r\n    //                         al: {\r\n    //                             id: t.al.id,\r\n    //                             name: t.al.name,\r\n    //                             url: t.al.picUrl,\r\n    //                         },\r\n    //                         ar: this.getauthor(t.ar),\r\n    //                     });\r\n    //                 });\r\n    //                 pl.tracks.forEach((t) => {\r\n    //                     Utils.Ajax({\r\n    //                         async: true,\r\n    //                         url: \"http://api.y-theta.cn/Netease/music/url?id=\" + t.id + \"&br=128000\",\r\n    //                         success: (data: string) => {\r\n    //                             Utils.Log(\"Song : \" + Utils.PadLeft(t.name, 16) + \"[ Fetched ]\");\r\n    //                             t.src = JSON.parse(data).data[0].url;\r\n    //                         },\r\n    //                         failed: (status: number) => {\r\n    //                             Utils.Log(status);\r\n    //                         },\r\n    //                         prepare: () => {\r\n    //                             Utils.Log(\"Song : \" + Utils.PadLeft(t.name, 16) + \"[ Fetching ]\");\r\n    //                         },\r\n    //                     });\r\n    //                 });\r\n    //                 this._timeouttimer = this._timeout * pl.tracks.length;\r\n    //                 setTimeout(this.waitAsync.bind(this), 100);\r\n    //             } else {\r\n    //                 Utils.Log(\"Playlist Load Failed! Please try later or check if the id is right \");\r\n    //             }\r\n    //         },\r\n    //         failed: (status: number) => {\r\n    //             Utils.Log(\"Playlist Load Failed!\" + status);\r\n    //         },\r\n    //         prepare: () => {\r\n    //             this.Loaded = false;\r\n    //             this.Timeout = false;\r\n    //             Utils.Log(\"Getting Playlist\");\r\n    //         },\r\n    //     });\r\n    // }\r\n    NeteaseCore.prototype.getauthor = function (ars) {\r\n        var arr = new Array();\r\n        ars.forEach(function (ar) {\r\n            arr.push({\r\n                id: ar.id,\r\n                name: ar.name,\r\n            });\r\n        });\r\n        return arr;\r\n    };\r\n    //#region\r\n    NeteaseCore._apiurl = \"http://api.y-theta.cn/Netease\";\r\n    NeteaseCore._playlistapi = NeteaseCore._apiurl + \"/playlist/detail?\";\r\n    NeteaseCore._tracksrcapi = NeteaseCore._apiurl + \"/music/url?\";\r\n    return NeteaseCore;\r\n}());\r\nexports.NeteaseCore = NeteaseCore;\r\n","\"use strict\";\r\n/**\r\n * @Y_Theta http://blog.y-theta.cn\r\n *\r\n * An audio player based on\r\n * Skplayer         https://github.com/wangpengfei15975/skPlayer\r\n * netmusic-node    https://github.com/sqaiyan/netmusic-node\r\n *\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RectPlayer = void 0;\r\nvar Utils_1 = require(\"./Utils\");\r\nvar PlayerModel_1 = require(\"./Model/PlayerModel\");\r\nvar Tasks_1 = require(\"./dependence/Tasks\");\r\nvar RectplayerTemplateResolver_1 = require(\"./RectplayerTemplateResolver\");\r\nvar NeteaseCore_1 = require(\"./NeteaseCore\");\r\nvar SongSelecter_1 = require(\"./SongSelecter\");\r\nvar RectPlayer = /** @class */ (function () {\r\n    /**\r\n     * 更改播放器的播放模式\r\n     * @param mode\r\n     * 播放模式 以下几种之一\r\n     * Netease | LocalFile\r\n     */\r\n    // public SwitchMode(mode: string) {\r\n    //     this._mode = mode;\r\n    //     this._srcResolver = null;\r\n    //     if (this._mode === \"Netease\") {\r\n    //         this._srcResolver = new NeteaseCore();\r\n    //     } else if (this._mode === \"LocalFile\") {\r\n    //         this._srcResolver = new LocalCore();\r\n    //     }\r\n    // }\r\n    // private loadlist(data: string) {\r\n    //     let temp = this._templateResolver.ResloveTemplate(data);\r\n    //     document.body.appendChild(temp.View);\r\n    //     this._playerControl = temp.Control;\r\n    // }\r\n    // private loadlistAsync(data: string) {\r\n    //     let temp = this._templateResolver.ResloveTemplate(data);\r\n    //     document.body.appendChild(temp.View);\r\n    //     this._playerControl = temp.Control;\r\n    //     this.getPlayList(this._listuid);\r\n    //     setTimeout(this.rendertemplate.bind(this), 100);\r\n    // }\r\n    // private rendertemplate() {\r\n    //     if (!this._srcResolver.Loaded) {\r\n    //         if (this._srcResolver.Timeout) {\r\n    //             Utils.Log(\"Some songs lost due to bad network or Netease! TimeOut\");\r\n    //         } else {\r\n    //             setTimeout(this.rendertemplate.bind(this), 100);\r\n    //             return;\r\n    //         }\r\n    //     }\r\n    //     this._playlist = this._srcResolver.Playlist;\r\n    //     this._templateResolver.RenderTemplate(this._playlist);\r\n    // }\r\n    //#region Constructor\r\n    function RectPlayer(option) {\r\n        //#region IOC\r\n        this._resolver = null;\r\n        this._core = null;\r\n        this._selecter = null;\r\n        //#endregion\r\n        //#region Properties\r\n        this._listflag = false;\r\n        this._panelflag = false;\r\n        this._mute = false;\r\n        this._playing = null;\r\n        this._priv = false;\r\n        this._enableresolve = false;\r\n        this._volume = 0;\r\n        this._volumebak = 0;\r\n        this._volumeref = 6000;\r\n        this._analyserfreq = 200;\r\n        this._srcid = null;\r\n        this._playstack = null;\r\n        this._playlist = null;\r\n        this._playmode = PlayerModel_1.PlayMode.normal;\r\n        this._playmodeloop = [PlayerModel_1.PlayMode.normal, PlayerModel_1.PlayMode.repeat, PlayerModel_1.PlayMode.repeatone, PlayerModel_1.PlayMode.random];\r\n        this._playerdom = null;\r\n        this._playcontrol = null;\r\n        /** AudioResolve */\r\n        this._audiocontext = null;\r\n        this._source = null;\r\n        this._gain = null;\r\n        this._analyser = null;\r\n        this._analyzeInterval = null;\r\n        this._resolvedarrbuffer = null;\r\n        this._dependencecollection = null;\r\n        this._templatesrc = null;\r\n        this._stylesrc = null;\r\n        Utils_1.Utils._enablelog = true;\r\n        this._resolver = new RectplayerTemplateResolver_1.DefaultTemplateResolver();\r\n        this._core = new NeteaseCore_1.NeteaseCore();\r\n        this._selecter = new SongSelecter_1.SongSelecter();\r\n        this._dependencecollection = option.Dependence || [Utils_1.Utils.Path(\"resource\") + \"/javascript/lib/less.min.js\"];\r\n        this._templatesrc = option.Template || Utils_1.Utils.Path() + \"/template/Template.xml\";\r\n        this._stylesrc = option.Style || Utils_1.Utils.Path() + \"/template/style.less\";\r\n        this._srcid = option.PlaylistId;\r\n        this._playstack = [];\r\n        Utils_1.Utils.Log(\"\\\\ RectPlayer  1.0.0 \\n\\\\ @Y_Theta \\n\\\\ http:\\\\\\\\blog.y-theta.com \\n\\\\ Starting ....\");\r\n    }\r\n    //#endregion\r\n    //#region IControlContract\r\n    RectPlayer.prototype.Play = function (id) { };\r\n    RectPlayer.prototype.Pause = function () { };\r\n    RectPlayer.prototype.Resume = function () { };\r\n    RectPlayer.prototype.Next = function () { };\r\n    RectPlayer.prototype.Prve = function () { };\r\n    RectPlayer.prototype.Playlist = function (action) { };\r\n    RectPlayer.prototype.SwitchMode = function (mode) { };\r\n    RectPlayer.prototype.About = function () { };\r\n    //#endregion\r\n    /** 初始化播放器 */\r\n    RectPlayer.prototype.Init = function () {\r\n        //加载依赖文件\r\n        var loadtasks = [];\r\n        this._dependencecollection &&\r\n            this._dependencecollection.forEach(function (element) {\r\n                loadtasks.push(Tasks_1.Tasks.Ajax({\r\n                    url: element,\r\n                    prepare: function () { return Utils_1.Utils.Log(\"loading ... \" + element); },\r\n                    success: function (arg) { return Utils_1.Utils.Log(arg.stepresult + \" loaded\"); },\r\n                    failed: function (arg) { return Utils_1.Utils.Log(arg.stepresult + \" failed\"); },\r\n                }));\r\n            });\r\n        Tasks_1.Tasks.WaitAll(loadtasks, this.loadtemplate.bind(this));\r\n    };\r\n    /** 加载模板 */\r\n    RectPlayer.prototype.loadtemplate = function () {\r\n        var lesstask = Tasks_1.Tasks.Ajax({\r\n            url: this._stylesrc,\r\n            prepare: function () { return Utils_1.Utils.Log(\"GetTemplate Less :\" + Utils_1.Utils.Path() + \"/template/style.less\"); },\r\n        });\r\n        var xmltask = Tasks_1.Tasks.Ajax({\r\n            url: this._templatesrc,\r\n            prepare: function () { return Utils_1.Utils.Log(\"GetTemplate Html :\" + Utils_1.Utils.Path() + \"/template/Template.xml\"); },\r\n        });\r\n        Tasks_1.Tasks.WaitAll([lesstask, xmltask], this.rendertemplate.bind(this), null, Tasks_1.TaskOrder.Sequence);\r\n    };\r\n    /** 渲染模板 绑定控制器 */\r\n    RectPlayer.prototype.rendertemplate = function (num, res, timeout) {\r\n        var _this = this;\r\n        // Utils.Log((!!timeout ? \"timeout\" : \"succeed\") + \"  -  \" + res.length);\r\n        if (res[0]) {\r\n            less.render(res[0], function (e, o) {\r\n                var style = document.createElement(\"style\");\r\n                style.type = \"text/css\";\r\n                style.innerHTML = o.css;\r\n                document.getElementsByTagName(\"head\").item(0).appendChild(style);\r\n            });\r\n        }\r\n        if (res[1]) {\r\n            this._resolver.ResloveTemplate(res[1], function (ctl, dom) {\r\n                _this._playcontrol = ctl;\r\n                _this._playerdom = dom;\r\n                _this.bindingctl();\r\n                document.body.appendChild(_this._playerdom);\r\n                /** 获取播放列表信息 */\r\n                _this._core.Init(_this._srcid, function (pl) {\r\n                    _this._playlist = pl;\r\n                    Utils_1.Utils.Log(pl);\r\n                    _this._resolver.RenderTemplate(_this._playlist, function () {\r\n                        /** 获取歌曲url */\r\n                        _this._core.Update(_this.onlistupdate.bind(_this));\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /** 播放列表刷新后行为 */\r\n    RectPlayer.prototype.onlistupdate = function (list) {\r\n        Utils_1.Utils.Log(\"Update - list\");\r\n        Utils_1.Utils.Log(this._playlist);\r\n        /** 加载歌曲列表 */\r\n        this._resolver.RenderPlaylist(this._playlist.tracks);\r\n        var firstvalid = this._playlist.tracks.findIndex(function (value) {\r\n            return value.valid;\r\n        });\r\n        this.preparesong(firstvalid);\r\n    };\r\n    RectPlayer.prototype.renderlist = function () { };\r\n    /** 绑定控制节点 */\r\n    RectPlayer.prototype.bindingctl = function () {\r\n        var ctl = this._playcontrol;\r\n        ctl.ctl_listtoogle.onclick = this.listmousetoggle.bind(this);\r\n        ctl.ctl_paneltoogle.onclick = this.panelmousetoggle.bind(this);\r\n        ctl.ctl_play.onclick = this.playmousetoggle.bind(this);\r\n        ctl.ctl_fore.onclick = this.next.bind(this);\r\n        ctl.ctl_prve.onclick = this.prve.bind(this);\r\n        ctl.ctl_mode.onclick = this.switchplaymode.bind(this);\r\n        this.switchmode(this._playmode);\r\n        ctl.source.onplay = this.resolvesrctrack.bind(this);\r\n        ctl.source.onpause = this.onsourcepause.bind(this);\r\n        ctl.source.onended = this.onsourceended.bind(this);\r\n        ctl.source.onerror = this.onsourceerror.bind(this);\r\n        ctl.source.onemptied = this.onsourceerror.bind(this);\r\n        ctl.source.ontimeupdate = this.autoupdatetrack.bind(this);\r\n        ctl.source.onprogress = this.autoupdatetrack.bind(this);\r\n        ctl.source.ondurationchange = this.autoupdatetimeline.bind(this);\r\n        this.pause();\r\n        ctl.volume_track.onclick = this.volumetrackclick.bind(this);\r\n        ctl.ctl_mute.onclick = this.volumeclick.bind(this);\r\n        ctl.volume.onmousewheel = this.volumescroll.bind(this);\r\n        ctl.volume.addEventListener(\"DOMMouseScroll\", this.volumescroll.bind(this), { passive: true });\r\n        ctl.track_full.onclick = this.ontrackclick.bind(this);\r\n    };\r\n    //#region 播放列表/控制面板\r\n    RectPlayer.prototype.listmousetoggle = function (e) {\r\n        this._listflag = !this._listflag;\r\n        this.togglelist(this._listflag);\r\n    };\r\n    /** 转换播放列表状态 */\r\n    RectPlayer.prototype.togglelist = function (flag) {\r\n        if (flag) {\r\n            this.switchElementStatus(this._playerdom, \"list-on\", \"list-off\");\r\n        }\r\n        else {\r\n            this.switchElementStatus(this._playerdom, \"list-off\", \"list-on\");\r\n        }\r\n    };\r\n    RectPlayer.prototype.panelmousetoggle = function (e) {\r\n        this._panelflag = !this._panelflag;\r\n        this.togglepanel(this._panelflag);\r\n    };\r\n    /** 转换控制栏状态 */\r\n    RectPlayer.prototype.togglepanel = function (flag) {\r\n        var _this = this;\r\n        if (flag) {\r\n            this.switchElementStatus(this._playerdom, \"panel-on\", \"panel-off\");\r\n        }\r\n        else {\r\n            if (this._playerdom.classList.contains(\"list-on\")) {\r\n                this._panelflag = false;\r\n                this.switchElementStatus(this._playerdom, \"list-off\", \"list-on\");\r\n                setTimeout(function () {\r\n                    _this.switchElementStatus(_this._playerdom, \"panel-off\", \"panel-on\");\r\n                }, 240);\r\n            }\r\n            else {\r\n                this.switchElementStatus(this._playerdom, \"panel-off\", \"panel-on\");\r\n            }\r\n        }\r\n    };\r\n    //#endregion\r\n    //#region 音量调整\r\n    /** 静音 */\r\n    RectPlayer.prototype.volumeclick = function (e) {\r\n        this.setMute(!this._mute);\r\n    };\r\n    /** 音量单击调整 */\r\n    RectPlayer.prototype.volumetrackclick = function (e) {\r\n        var clip = this._playcontrol.volume.getBoundingClientRect();\r\n        //   console.log(e, clip);\r\n        var cw = clip.width / 2;\r\n        var ch = clip.height / 2;\r\n        var x1 = e.clientX - clip.x, y1 = e.clientY - clip.y;\r\n        var angle = Utils_1.Utils.AngleLL({ x: cw, y: 0 }, { x: x1, y: y1 }, { x: cw, y: ch });\r\n        this._mute = false;\r\n        this._volume = (angle / 360) * this._volumeref;\r\n        this.setVolume(this._volume);\r\n    };\r\n    /** 音量滚动调整 */\r\n    RectPlayer.prototype.volumescroll = function (e) {\r\n        e = e || window.event;\r\n        var data;\r\n        if (e.wheelDelta) {\r\n            //IE/Opera/Chrome\r\n            data = e.wheelDelta;\r\n        }\r\n        else if (e.detail) {\r\n            //Firefox\r\n            data = e.detail;\r\n        }\r\n        this._mute && this.setMute(false);\r\n        this._volume += data;\r\n        this.setVolume(this._volume);\r\n    };\r\n    /** 设置静音 */\r\n    RectPlayer.prototype.setMute = function (flag) {\r\n        this._mute = flag;\r\n        Utils_1.Utils.Log(\"Mute :\" + flag);\r\n        if (flag) {\r\n            this._volumebak = this._volume;\r\n            this._volume = 0;\r\n        }\r\n        else {\r\n            this._volume = this._volumebak;\r\n        }\r\n        this.setVolume(this._volume);\r\n    };\r\n    /** 设置音量 */\r\n    RectPlayer.prototype.setVolume = function (v) {\r\n        this._volume = v < this._volumeref ? (v < 0 ? 0 : v) : this._volumeref;\r\n        var newpath = Utils_1.Utils.Percent(this._volume / this._volumeref, { x: 32, y: 32 }, 24);\r\n        this._playcontrol.volume_path.setAttribute(\"d\", newpath);\r\n        var volume = this._playcontrol.volume;\r\n        if (this._volume == 0) {\r\n            volume.classList.add(\"mute\");\r\n        }\r\n        else {\r\n            volume.classList.contains(\"mute\") ? volume.classList.remove(\"mute\") : null;\r\n        }\r\n        this._gain && (this._gain.gain.value = this._volume / this._volumeref);\r\n    };\r\n    //#endregion\r\n    //#region 播放暂停控制\r\n    RectPlayer.prototype.playmousetoggle = function (e) {\r\n        this._playing ? this.pause() : this.resume();\r\n    };\r\n    RectPlayer.prototype.resume = function () {\r\n        if (this._playing)\r\n            return;\r\n        this._playing = true;\r\n        this.switchElementStatus(this._playerdom, \"play\", \"pause\");\r\n        this._playcontrol.source.play();\r\n    };\r\n    RectPlayer.prototype.pause = function () {\r\n        if (this._playing != undefined && !this._playing)\r\n            return;\r\n        this._playing = false;\r\n        this.switchElementStatus(this._playerdom, \"pause\", \"play\");\r\n        this._playcontrol.source.pause();\r\n    };\r\n    RectPlayer.prototype.play = function (id) {\r\n        if (id < 0 ||\r\n            !this._playlist ||\r\n            id >= this._playlist.tracks.length ||\r\n            id === this._playstack[this._playstack.length - 1])\r\n            return;\r\n        this.preparesong(id);\r\n        this.pause();\r\n        this.resume();\r\n    };\r\n    RectPlayer.prototype.prve = function () {\r\n        if (this._playstack.length <= 0)\r\n            return;\r\n        //TODO:: select prve\r\n        this._priv = true;\r\n        var prve = this._selecter[\"Priv\"](this._playmode, this._playlist.tracks, this._playstack[this._playstack.length - 1], this._playstack);\r\n        if (typeof prve == \"number\")\r\n            this.play(prve);\r\n    };\r\n    RectPlayer.prototype.next = function () {\r\n        if (this._playstack.length <= 0)\r\n            return;\r\n        //TODO:: select next\r\n        var next = this._selecter[\"Next\"](this._playmode, this._playlist.tracks, this._playstack[this._playstack.length - 1], this._playstack);\r\n        if (typeof next == \"number\")\r\n            this.play(next);\r\n    };\r\n    RectPlayer.prototype.preparesong = function (id) {\r\n        this._playstack.push(id);\r\n        this._resolver.UpdateUI(this._playlist.tracks[id], this._playstack);\r\n    };\r\n    RectPlayer.prototype.onsourceended = function () {\r\n        this.pause();\r\n        this.next();\r\n    };\r\n    /** 进度条控制 */\r\n    RectPlayer.prototype.ontrackclick = function (e) {\r\n        var clip = this._playcontrol.track_full.getBoundingClientRect();\r\n        var x1 = e.clientX - clip.x;\r\n        var audio = this._playcontrol.source;\r\n        audio && (audio.currentTime = (x1 / clip.width) * audio.duration);\r\n    };\r\n    /** 自动更新歌曲播放进度 */\r\n    RectPlayer.prototype.autoupdatetrack = function () {\r\n        var audio = this._playcontrol.source;\r\n        if (audio.src) {\r\n            var bw = audio.buffered.length ? audio.buffered.end(audio.buffered.length - 1) / audio.duration : 0;\r\n            this._playcontrol.track_loding.style.width = Utils_1.Utils.PercentFormat(bw);\r\n            var aw = audio.currentTime / audio.duration;\r\n            this._playcontrol.track_now.style.width = \"\" + (this._playcontrol.track_full.clientWidth - 8) * aw + \"px\";\r\n            this._playcontrol.time_now.innerHTML = Utils_1.Utils.TimeFormat(audio.currentTime);\r\n        }\r\n    };\r\n    /** 自动更新歌曲时长 */\r\n    RectPlayer.prototype.autoupdatetimeline = function () {\r\n        this._playcontrol.time_des.innerHTML = Utils_1.Utils.TimeFormat(this._playcontrol.source.duration);\r\n        this._playcontrol.track_loding.style.width = \"0\";\r\n        this._playcontrol.track_now.style.width = \"0\";\r\n    };\r\n    //#endregion\r\n    //#region 设置播放模式\r\n    RectPlayer.prototype.switchplaymode = function () {\r\n        var nowindex = this._playmodeloop.indexOf(this._playmode);\r\n        nowindex = (nowindex + 1) % this._playmodeloop.length;\r\n        this.switchmode(this._playmodeloop[nowindex]);\r\n    };\r\n    RectPlayer.prototype.switchmode = function (mode) {\r\n        Utils_1.Utils.Log([this._playmode, mode]);\r\n        this.switchElementStatus(this._playcontrol.ctl_mode, mode, this._playmode);\r\n        this._playmode = mode;\r\n    };\r\n    //#endregion\r\n    //#region 音频可视化\r\n    RectPlayer.prototype.resolvesrctrack = function () {\r\n        if (!this._audiocontext) {\r\n            this._audiocontext = this.getaudiocontext();\r\n            this._source = this._audiocontext.createMediaElementSource(this._playcontrol.source);\r\n            this._gain = this._audiocontext.createGain();\r\n            this._analyser = this._audiocontext.createAnalyser();\r\n            this._analyser.fftSize = 128;\r\n            this._analyser.smoothingTimeConstant = 0.8;\r\n            this._source.connect(this._gain);\r\n            this._gain.connect(this._analyser);\r\n            this._analyser.connect(this._audiocontext.destination);\r\n            this._resolvedarrbuffer = new Uint8Array(this._analyser.frequencyBinCount);\r\n            this.setVolume(this._gain.gain.value * 6000);\r\n        }\r\n        if (this._enableresolve) {\r\n            this._analyzeInterval = setInterval(this.renderresolve.bind(this), this._analyserfreq);\r\n        }\r\n    };\r\n    RectPlayer.prototype.onsourceerror = function (e) {\r\n        Utils_1.Utils.Log(\"Src err : \" + e);\r\n        this._playcontrol.time_des.innerHTML = \"00:00\";\r\n        this._playcontrol.track_loding.style.width = \"0\";\r\n        this._playcontrol.track_now.style.width = \"0\";\r\n        if (this._analyzeInterval) {\r\n            clearInterval(this._analyzeInterval);\r\n            this._analyzeInterval = null;\r\n        }\r\n    };\r\n    RectPlayer.prototype.onsourcepause = function () {\r\n        if (this._analyzeInterval) {\r\n            clearInterval(this._analyzeInterval);\r\n            this._analyzeInterval = null;\r\n        }\r\n    };\r\n    RectPlayer.prototype.renderresolve = function () {\r\n        //TODO:: paint resolve graph\r\n        this._analyser.getByteFrequencyData(this._resolvedarrbuffer);\r\n        Utils_1.Utils.Log(this._resolvedarrbuffer);\r\n    };\r\n    RectPlayer.prototype.getaudiocontext = function () {\r\n        window.AudioContext =\r\n            window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;\r\n        try {\r\n            return new AudioContext();\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    //#endregion\r\n    RectPlayer.prototype.switchElementStatus = function (ctl, state1, state2) {\r\n        Utils_1.Utils.SwitchElementStatus(ctl, state1, state2);\r\n    };\r\n    return RectPlayer;\r\n}());\r\nexports.RectPlayer = RectPlayer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DefaultTemplateResolver = void 0;\r\n/**\r\n *\r\n * 模板解析类,用于定义如何解析其Html模板\r\n *\r\n * */\r\nvar PlayerModel_1 = require(\"./Model/PlayerModel\");\r\nvar Utils_1 = require(\"./Utils\");\r\n/**\r\n * 默认的播放器样式解析器\r\n * 根据模板中定义的关键字解析模板\r\n * */\r\nvar DefaultTemplateResolver = /** @class */ (function () {\r\n    function DefaultTemplateResolver() {\r\n        this._playerelement = null;\r\n        this._listtemplate = null;\r\n        this._control = null;\r\n        this._playlist = null;\r\n        this._playmode = PlayerModel_1.PlayMode.normal;\r\n        this._playmodeloop = [PlayerModel_1.PlayMode.normal, PlayerModel_1.PlayMode.repeat, PlayerModel_1.PlayMode.repeatone, PlayerModel_1.PlayMode.random];\r\n        this._maxtrackwidth = 0;\r\n        this._pretrackwidth = 0;\r\n        this._acttrackwidth = 0;\r\n    }\r\n    //#region Interface Function\r\n    /**\r\n     * 解析播放器模板\r\n     * @param oritemplate  模板html\r\n     * @param callback     回调\r\n     */\r\n    DefaultTemplateResolver.prototype.ResloveTemplate = function (oritemplate, callback) {\r\n        //Utils.Log(XML.xml2js(oritemplate));\r\n        this._playerelement = document.createElement(\"div\");\r\n        this._playerelement.id = \"rectPlayer\";\r\n        var result = /<player>([\\s\\S]*?)<\\/player>[\\s\\S]*?<listitem>([\\s\\S]*?)<\\/listitem>/im.exec(oritemplate);\r\n        var playerdom = Utils_1.Utils.Dom(result[1]);\r\n        this._listtemplate = result[2];\r\n        //#region GetElementref\r\n        this._control = this.loadControl(playerdom);\r\n        //#endregion\r\n        //#region 开关控制\r\n        // this.$g(\"ctl-play\").onclick = this.playpause.bind(this);\r\n        // this.pause();\r\n        // this.$g(\"openpanel\").onclick = this.openctlpanel.bind(this);\r\n        // this.$g(\"openlist\").onclick = this.openlist.bind(this);\r\n        // this.$g(\"volume-track\").onclick = this.volumetrackclick.bind(this);\r\n        // this.$g(\"ctl-mute\").onclick = this.volumeclick.bind(this);\r\n        // this.$g(\"volume\").addEventListener(\"DOMMouseScroll\", this.volumescroll.bind(this), { passive: true });\r\n        // this.$g(\"volume\").onmousewheel = this.volumescroll.bind(this);\r\n        // this.$g(\"mode\").addEventListener(\"click\", this.setmode.bind(this));\r\n        // this.switchmode(this._playmode);\r\n        // this.$g(\"list-detail\").onclick = this.listClick.bind(this);\r\n        // this.$g(\"list-detail\").ondblclick = this.listDbClick.bind(this);\r\n        // this.setVolume(this._volumemax / 2);\r\n        // this.$g(\"track-full\").onclick = this.trackclick.bind(this);\r\n        // this.$g(\"source\").ontimeupdate = this.autoUpdateTrack.bind(this);\r\n        // this.$g(\"source\").onprogress = this.autoUpdateTrack.bind(this);\r\n        // this.$g(\"source\").ondurationchange = this.updateTimeline.bind(this);\r\n        // this.$g(\"source\").onemptied = this.audiosrcerr.bind(this);\r\n        //#endregion\r\n        for (var key in this._control) {\r\n            if (this._control.hasOwnProperty(key)) {\r\n                this._control[key].removeAttribute(\"id\");\r\n            }\r\n        }\r\n        this._playerelement.append(playerdom);\r\n        callback(this._control, this._playerelement);\r\n    };\r\n    DefaultTemplateResolver.prototype.RenderTemplate = function (data, callback) {\r\n        this._playlist = data.tracks;\r\n        // this._songid = 0;\r\n        // this._lastsongid = 0;\r\n        // this.updateUI(this._songid);\r\n        callback(null);\r\n    };\r\n    DefaultTemplateResolver.prototype.RenderPlaylist = function (list) {\r\n        var _this = this;\r\n        this._playlist = list;\r\n        if (this._playlist) {\r\n            this._control.list.innerHTML = null;\r\n            this._playlist.forEach(function (v, i) {\r\n                var listitem = Utils_1.Utils.Dom(_this._listtemplate);\r\n                var liid = listitem.querySelector(\"#id\");\r\n                liid.innerHTML = \"\" + (i + 1);\r\n                liid.removeAttribute(\"id\");\r\n                var liname = listitem.querySelector(\"#info\");\r\n                liname.innerHTML = \"\" + v.name + (v.ar[0] && \"-\" + v.ar[0].name);\r\n                liname.removeAttribute(\"id\");\r\n                if (!v.valid) {\r\n                    var li = listitem.querySelector(\"li\");\r\n                    li.classList.add(\"unavailable\");\r\n                }\r\n                _this._control.list.appendChild(listitem.childNodes[0]);\r\n            });\r\n        }\r\n    };\r\n    //#endregion\r\n    /**\r\n     * 装填控件\r\n     * @param dom\r\n     */\r\n    DefaultTemplateResolver.prototype.loadControl = function (dom) {\r\n        var player = new PlayerModel_1.RectPlayerControl();\r\n        player.name = dom.querySelector(\"#name\");\r\n        player.author = dom.querySelector(\"#author\");\r\n        player.source = dom.querySelector(\"#source\");\r\n        player.list = dom.querySelector(\"#list-detail\");\r\n        player.cover_avatar = dom.querySelector(\"#cover-avatar\");\r\n        player.cover_resolve = dom.querySelector(\"#cover-resolve\");\r\n        player.cover_static = dom.querySelector(\"#cover-static\");\r\n        player.ctl_play = dom.querySelector(\"#ctl-play\");\r\n        player.ctl_mute = dom.querySelector(\"#ctl-mute\");\r\n        player.ctl_fore = dom.querySelector(\"#ctl-fore\");\r\n        player.ctl_prve = dom.querySelector(\"#ctl-prve\");\r\n        player.ctl_mode = dom.querySelector(\"#ctl-mode\");\r\n        player.ctl_listadd = dom.querySelector(\"#ctl-listadd\");\r\n        player.ctl_listremove = dom.querySelector(\"#ctl-listremove\");\r\n        player.ctl_listtoogle = dom.querySelector(\"#openlist\");\r\n        player.ctl_paneltoogle = dom.querySelector(\"#openpanel\");\r\n        player.ctl_about = dom.querySelector(\"#ctl-about\");\r\n        player.time_now = dom.querySelector(\"#time-now\");\r\n        player.time_des = dom.querySelector(\"#time-total\");\r\n        player.volume = dom.querySelector(\"#volume\");\r\n        player.volume_path = dom.querySelector(\"#volume-path\");\r\n        player.volume_track = dom.querySelector(\"#volume-track\");\r\n        player.track_full = dom.querySelector(\"#track-full\");\r\n        player.track_loding = dom.querySelector(\"#track-loding\");\r\n        player.track_now = dom.querySelector(\"#track-pos\");\r\n        return player;\r\n    };\r\n    /**\r\n     * 使用API得到的音乐SRC为临时地址，需要定时刷新\r\n     */\r\n    DefaultTemplateResolver.prototype.RefreshSrc = function () { };\r\n    /**\r\n     *\r\n     */\r\n    DefaultTemplateResolver.prototype.UpdateUI = function (track, stack) {\r\n        this._control.cover_avatar.style.backgroundImage = \"url(\" + track.al.url + \"?param=256y256\" + \")\";\r\n        this._control.source.setAttribute(\"src\", track.src);\r\n        this._control.name.innerHTML = track.name;\r\n        this._control.author.innerHTML = track.ar[0].name;\r\n        var children = this._control.list.childNodes;\r\n        stack.length >= 2 && children.item(stack[stack.length - 2]).classList.remove(\"playing\");\r\n        children.item(stack[stack.length - 1]).classList.remove(\"selected\");\r\n        children.item(stack[stack.length - 1]).classList.add(\"playing\");\r\n    };\r\n    return DefaultTemplateResolver;\r\n}());\r\nexports.DefaultTemplateResolver = DefaultTemplateResolver;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SongSelecter = void 0;\r\nvar PlayerModel_1 = require(\"./Model/PlayerModel\");\r\n/**  */\r\nvar SongSelecter = /** @class */ (function () {\r\n    function SongSelecter() {\r\n    }\r\n    /** 选择前一首歌曲 */\r\n    SongSelecter.prototype.Priv = function (mode, tracks, now, history) {\r\n        if (!tracks) {\r\n            return null;\r\n        }\r\n        var privid = typeof now == \"number\" ? now : tracks.indexOf(now);\r\n        switch (mode) {\r\n            case PlayerModel_1.PlayMode.normal:\r\n            case PlayerModel_1.PlayMode.repeat:\r\n            case PlayerModel_1.PlayMode.repeatone:\r\n                if (history)\r\n                    privid = history[history.length - 2];\r\n                else\r\n                    privid = (privid - 1 + tracks.length) % tracks.length;\r\n                break;\r\n            case PlayerModel_1.PlayMode.random:\r\n                if (history)\r\n                    privid = history[history.length - 2];\r\n                else\r\n                    privid = Math.floor(Math.random() * tracks.length);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return privid;\r\n    };\r\n    /** 选择后一首歌曲 */\r\n    SongSelecter.prototype.Next = function (mode, tracks, now, history) {\r\n        if (!tracks) {\r\n            return null;\r\n        }\r\n        var privid = typeof now == \"number\" ? now : tracks.indexOf(now);\r\n        switch (mode) {\r\n            case PlayerModel_1.PlayMode.normal:\r\n            case PlayerModel_1.PlayMode.repeat:\r\n            case PlayerModel_1.PlayMode.repeatone:\r\n                privid = (privid + 1) % tracks.length;\r\n                break;\r\n            case PlayerModel_1.PlayMode.random:\r\n                privid = Math.floor(Math.random() * tracks.length);\r\n                break;\r\n            // case PlayMode.repeat:\r\n            //     if (history) privid = history[history.length - 2];\r\n            //     else privid = (privid - 1 + tracks.length) % tracks.length;\r\n            //     break;\r\n            // case PlayMode.repeatone:\r\n            //     if (history) privid = history[history.length - 2];\r\n            //     else privid = (privid - 1 + tracks.length) % tracks.length;\r\n            //     break;\r\n            default:\r\n                break;\r\n        }\r\n        return privid;\r\n    };\r\n    return SongSelecter;\r\n}());\r\nexports.SongSelecter = SongSelecter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Utils = void 0;\r\n/**\r\n *\r\n * @Y_Theta http://blog.y-theta.cn\r\n *\r\n * Utils\r\n *\r\n */\r\nvar Utils = /** @class */ (function () {\r\n    function Utils() {\r\n    }\r\n    /**\r\n     * 判断有无中文字符\r\n     * @param temp\r\n     */\r\n    Utils.hasChinese = function (temp) {\r\n        //var re = /.*[\\\\u4E00-\\\\u9FFF]+.*$/;\r\n        return escape(temp).indexOf(\"%u\") >= 0;\r\n    };\r\n    /**\r\n     * 将文本转化为dom对象，方便使用筛选器进行查询\r\n     * @param arg 要转换为dom对象的文本\r\n     */\r\n    Utils.Dom = function (arg) {\r\n        var objE = document.createElement(\"div\");\r\n        objE.innerHTML = arg.replace(/(>)\\s+?(<)/gm, \"$1$2\").trim();\r\n        return objE;\r\n    };\r\n    /**\r\n     * 输出函数\r\n     */\r\n    Utils.Log = function (obj) {\r\n        Utils._enablelog ? obj && console.log(obj) : null;\r\n    };\r\n    /* 质朴长存法  by lifesinger */\r\n    Utils.PadLeft = function (num, n) {\r\n        var padnum = num.toString();\r\n        var len = num.toString().length;\r\n        var charp = typeof num == \"string\" ? (Utils.hasChinese(num) ? \"\\u3000\" : \" \") : \"0\";\r\n        while (len < n) {\r\n            padnum = charp + padnum;\r\n            len++;\r\n        }\r\n        return padnum;\r\n    };\r\n    /**\r\n     * 获取目录路径\r\n     */\r\n    Utils.Path = function (type) {\r\n        if (type === void 0) { type = \"root\"; }\r\n        switch (type) {\r\n            case \"resource\":\r\n                return Utils._respath;\r\n            case \"root\":\r\n                return (Utils._rootpath ||\r\n                    ((Utils._rootpath = document.URL.replace(/([\\s\\S]*)(\\/[^\\/]*?\\.html)/i, \"$1\")), Utils._rootpath));\r\n            case \"\":\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * 将时间转化为 00:00格式\r\n     * @param time\r\n     */\r\n    Utils.TimeFormat = function (time) {\r\n        var tempMin = ~~(time / 60);\r\n        var tempSec = ~~(time % 60);\r\n        var curMin = tempMin < 10 ? \"0\" + tempMin : tempMin;\r\n        var curSec = tempSec < 10 ? \"0\" + tempSec : tempSec;\r\n        return curMin + \":\" + curSec;\r\n    };\r\n    /**\r\n     * 将小数转换为百分比\r\n     * @param percent\r\n     */\r\n    Utils.PercentFormat = function (percent) {\r\n        return (percent * 100).toFixed(2) + \"%\";\r\n    };\r\n    /**\r\n     * 将百分比转化为svg的环形\r\n     */\r\n    Utils.Percent = function (percent, center, radius) {\r\n        var A = percent * Math.PI * 2;\r\n        var x = radius * Math.sin(A);\r\n        var y = radius * Math.cos(A);\r\n        x = center.x + x;\r\n        y = center.y - y;\r\n        var t = center.y - radius;\r\n        if (percent < 0.5)\r\n            return \"M \" + center.x + \",\" + t + \" A \" + radius + \" \" + radius + \" 0 0 1 \" + x + \" \" + y;\r\n        else if (percent == 1)\r\n            return \"M \" + center.x + \",\" + t + \" A \" + radius + \" \" + radius + \"  0 1 1 \" + (x - 0.01) + \" \" + y;\r\n        else\r\n            return \"M \" + center.x + \",\" + t + \" A \" + radius + \" \" + radius + \"  0 1 1 \" + x + \" \" + y;\r\n    };\r\n    /**\r\n     * 获取两直线夹角\r\n     * 直线由（p1 ,p） (p2 ,p) 确定\r\n     */\r\n    Utils.AngleLL = function (p1, p2, p) {\r\n        var x1 = p1.x - p.x;\r\n        var y1 = p1.y - p.y;\r\n        var x2 = p2.x - p.x;\r\n        var y2 = p2.y - p.y;\r\n        var dot = x1 * x2 + y1 * y2;\r\n        var det = x1 * y2 - y1 * x2;\r\n        var angle = (Math.atan2(det, dot) / Math.PI) * 180;\r\n        return (angle + 360) % 360;\r\n    };\r\n    /**\r\n     *\r\n     * @param element 需要设置的元素\r\n     * @param normal 元素的默认状态\r\n     * @param active 元素的变化状态\r\n     */\r\n    Utils.SwitchElementStatus = function (element, normal, active) {\r\n        if (element) {\r\n            var classl = element.classList;\r\n            // prepare && prepare(normal);\r\n            if (normal == null) {\r\n                classl.contains(active) ? classl.remove(active) : null;\r\n                return;\r\n            }\r\n            else {\r\n                classl.contains(normal)\r\n                    ? null\r\n                    : classl.contains(active)\r\n                        ? (classl.remove(active), classl.add(normal))\r\n                        : classl.add(normal);\r\n            }\r\n        }\r\n    };\r\n    Utils._rootpath = null;\r\n    Utils._respath = \"http://res.y-theta.cn\";\r\n    Utils._enablelog = true;\r\n    return Utils;\r\n}());\r\nexports.Utils = Utils;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TaskArgs = exports.TaskOrder = exports.AjaxOption = exports.Tasks = void 0;\r\n/**\r\n * 任务列表中的任务执行顺序\r\n */\r\nvar TaskOrder;\r\n(function (TaskOrder) {\r\n    /**\r\n     * 以放入列表的属性执行任务，下一任务须在上一任务返回值获得后执行\r\n     */\r\n    TaskOrder[TaskOrder[\"Sequence\"] = 1] = \"Sequence\";\r\n    /**\r\n     * 以放入列表的属性执行任务，下一任务无需等待上一任务完成\r\n     */\r\n    TaskOrder[TaskOrder[\"Default\"] = 2] = \"Default\";\r\n})(TaskOrder || (TaskOrder = {}));\r\nexports.TaskOrder = TaskOrder;\r\n/**\r\n * 任务参数\r\n */\r\nvar TaskArgs = /** @class */ (function () {\r\n    function TaskArgs(args) {\r\n        this.args = args;\r\n        this.abort = false;\r\n        this.err = \"\";\r\n        this.stepresult = null;\r\n    }\r\n    return TaskArgs;\r\n}());\r\nexports.TaskArgs = TaskArgs;\r\nvar AsyncTaskArgs = /** @class */ (function () {\r\n    function AsyncTaskArgs() {\r\n    }\r\n    return AsyncTaskArgs;\r\n}());\r\n/** Ajax 请求参数 */\r\nvar AjaxOption = /** @class */ (function () {\r\n    function AjaxOption() {\r\n    }\r\n    return AjaxOption;\r\n}());\r\nexports.AjaxOption = AjaxOption;\r\nvar BaseAsyncTask = /** @class */ (function () {\r\n    function BaseAsyncTask() {\r\n    }\r\n    BaseAsyncTask.prototype.Execute = function () { };\r\n    BaseAsyncTask.prototype.Wait = function (task) {\r\n        var oricall = task.Callback;\r\n        task.Callback = (function (that) {\r\n            return function (arg) {\r\n                oricall(arg);\r\n                that.Execute();\r\n            };\r\n        })(this);\r\n    };\r\n    return BaseAsyncTask;\r\n}());\r\n/**\r\n * 简单异步任务\r\n * 包装 setTimeout ()\r\n */\r\nvar AsyncTask = /** @class */ (function (_super) {\r\n    __extends(AsyncTask, _super);\r\n    function AsyncTask(handle, delay, args) {\r\n        var _this = _super.call(this) || this;\r\n        _this._handle = handle;\r\n        _this._delay = delay;\r\n        _this.Arg = new TaskArgs(args);\r\n        return _this;\r\n    }\r\n    AsyncTask.prototype.Execute = function () {\r\n        var _this = this;\r\n        var arg = new AsyncTaskArgs();\r\n        arg.arg = this.Arg;\r\n        arg.callback = this.Callback;\r\n        var callback = (function (arg) {\r\n            arg.arg.stepresult = _this._handle && _this._handle(arg.arg);\r\n            arg.callback && arg.callback(arg.arg);\r\n        }).bind(this);\r\n        setTimeout(callback, this._delay, arg);\r\n    };\r\n    return AsyncTask;\r\n}(BaseAsyncTask));\r\n/**\r\n * 异步 Ajax 任务\r\n * 包装 XMLHttpRequest\r\n */\r\nvar AjaxTask = /** @class */ (function (_super) {\r\n    __extends(AjaxTask, _super);\r\n    function AjaxTask(option) {\r\n        var _this = _super.call(this) || this;\r\n        _this._xhr = null;\r\n        _this.Arg = new TaskArgs([option]);\r\n        return _this;\r\n    }\r\n    /**\r\n     * 创建 document.ready 方法\r\n     */\r\n    AjaxTask.extenddocready = function () {\r\n        var ie = !!(window.attachEvent && !window.opera);\r\n        var webkit = /webkit\\/(\\d+)/i.test(navigator.userAgent) && ~~RegExp.$1 < 525;\r\n        var fn = [];\r\n        var run = function () {\r\n            for (var i = 0; i < fn.length; i++)\r\n                fn[i]();\r\n        };\r\n        document.ready = function (f) {\r\n            if (!ie && !webkit && document.addEventListener) {\r\n                return document.addEventListener(\"DOMContentLoaded\", f, false);\r\n            }\r\n            if (fn.push(f) > 1)\r\n                return;\r\n            if (ie)\r\n                (function () {\r\n                    try {\r\n                        document.documentElement.scroll({ left: 0 });\r\n                        run();\r\n                    }\r\n                    catch (err) {\r\n                        setTimeout(arguments.callee, 0);\r\n                    }\r\n                })();\r\n            else if (webkit)\r\n                var t = setInterval(function () {\r\n                    if (/^(loaded|complete)$/.test(document.readyState))\r\n                        clearInterval(t), run();\r\n                }, 0);\r\n        };\r\n    };\r\n    AjaxTask.root = function () {\r\n        return (AjaxTask._root ||\r\n            (typeof document == \"undefined\"\r\n                ? \"\"\r\n                : (document && (AjaxTask._root = document.URL.replace(/([\\s\\S]*)(\\/[^\\/]*?\\.html)/i, \"$1\")),\r\n                    AjaxTask._root)));\r\n    };\r\n    AjaxTask.prototype.Execute = function () {\r\n        var _this = this;\r\n        var option = this.Arg.args[0];\r\n        option.prepare && option.prepare();\r\n        var jslist = /.+\\/([^\\/].+?js)\\??/gi.exec(option.url);\r\n        if (jslist && jslist.length > 0) {\r\n            var script_1 = document.createElement(\"script\");\r\n            script_1.type = \"text/javascript\";\r\n            script_1.onload = function (e) {\r\n                _this.success(jslist[1]);\r\n            };\r\n            script_1.onerror = function (e) {\r\n                _this.failed(jslist[1]);\r\n            };\r\n            script_1.src = option.url;\r\n            try {\r\n                document.body.appendChild(script_1);\r\n            }\r\n            catch (err) {\r\n                document.ready == null ? AjaxTask.extenddocready() : null;\r\n                document.ready(function () {\r\n                    document.body.appendChild(script_1);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this._xhr = new XMLHttpRequest();\r\n            this._xhr.timeout = option.timeout || 300000;\r\n            this._xhr.responseType = option.responseType || \"text\";\r\n            this._xhr.withCredentials = !!option.withCredentials;\r\n            this._xhr.onreadystatechange = function () {\r\n                if (_this._xhr.readyState === 4) {\r\n                    // TODO:: 访问服务器文件与本地文件分别配置\r\n                    if (AjaxTask.root().indexOf(\"file:///\") == 0) {\r\n                        if (_this._xhr.responseType === \"text\")\r\n                            _this.success(_this._xhr.responseText);\r\n                        else\r\n                            _this.success(_this._xhr.response);\r\n                    }\r\n                    else {\r\n                        if (_this._xhr.status >= 200 && _this._xhr.status < 300) {\r\n                            if (_this._xhr.responseType === \"text\")\r\n                                _this.success(_this._xhr.responseText);\r\n                            else\r\n                                _this.success(_this._xhr.response);\r\n                        }\r\n                        else {\r\n                            _this.failed(_this._xhr.status);\r\n                        }\r\n                    }\r\n                    _this.complete(_this._xhr);\r\n                }\r\n            };\r\n            this._xhr.open(option.method || \"GET\", option.url, option.async == false ? false : true);\r\n            option.onsetheader && option.onsetheader(this._xhr);\r\n            this._xhr.send(option.data || null);\r\n        }\r\n    };\r\n    AjaxTask.prototype.success = function (arg) {\r\n        var option = this.Arg.args[0];\r\n        this.Arg.stepresult = arg;\r\n        option.success && option.success(this.Arg);\r\n        this.Callback && this.Callback(this.Arg);\r\n    };\r\n    AjaxTask.prototype.failed = function (arg) {\r\n        var option = this.Arg.args[0];\r\n        this.Arg.stepresult = arg;\r\n        option.failed && option.failed(this.Arg);\r\n        this.Callback && this.Callback(this.Arg);\r\n    };\r\n    AjaxTask.prototype.complete = function (xhr) {\r\n        if (xhr)\r\n            xhr = null;\r\n    };\r\n    AjaxTask._root = null;\r\n    return AjaxTask;\r\n}(BaseAsyncTask));\r\n/**\r\n * 自定义任务类\r\n */\r\nvar Tasks = /** @class */ (function () {\r\n    function Tasks() {\r\n    }\r\n    /**\r\n     * 等待所有任务完成\r\n     * @param asynctasks 任务列表 任务需为 IAsyncTask 衍生类型\r\n     * @param callback   任务结束回调\r\n     * @param step       单个任务执行结果回调\r\n     * @param order      任务执行顺序\r\n     */\r\n    Tasks.WaitAll = function (asynctasks, callback, step, order, timeout) {\r\n        if (asynctasks) {\r\n            var taskcount_1 = asynctasks.length;\r\n            var resultcollection_1 = new Array();\r\n            var ordera = order || TaskOrder.Default;\r\n            var timeouted_1 = [];\r\n            timeouted_1.push(false);\r\n            if (timeout && timeout > 0) {\r\n                setTimeout(function (t) {\r\n                    t[0] = true;\r\n                }, timeout, timeouted_1);\r\n            }\r\n            if (ordera == TaskOrder.Sequence) {\r\n                var i = 0;\r\n                for (; i < taskcount_1; i++) {\r\n                    if (i + 1 < taskcount_1) {\r\n                        asynctasks[i].Callback = (function (index) {\r\n                            return function (arg) {\r\n                                // Utils.Log(arg.stepresult);\r\n                                if (timeouted_1[0]) {\r\n                                    callback && callback(index - 1, resultcollection_1, true);\r\n                                    return;\r\n                                }\r\n                                resultcollection_1.push(arg.stepresult);\r\n                                step && step(index - 1, taskcount_1, arg.stepresult, resultcollection_1, arg.err);\r\n                                asynctasks[index].Arg.stepresult = arg.stepresult;\r\n                                asynctasks[index].Arg.abort = timeouted_1[0];\r\n                                asynctasks[index].Execute();\r\n                            };\r\n                        })(i + 1);\r\n                    }\r\n                    else {\r\n                        asynctasks[i].Callback = function (arg) {\r\n                            // Utils.Log(arg.stepresult);\r\n                            if (arg.abort || timeouted_1[0]) {\r\n                                callback && callback(taskcount_1 - 1, resultcollection_1, timeouted_1[0]);\r\n                                return;\r\n                            }\r\n                            resultcollection_1.push(arg.stepresult);\r\n                            step && step(taskcount_1 - 1, taskcount_1, arg.stepresult, resultcollection_1, arg.err);\r\n                            callback && callback(taskcount_1, resultcollection_1);\r\n                            //callback(arg);\r\n                        };\r\n                    }\r\n                }\r\n                asynctasks[0].Execute();\r\n            }\r\n            else {\r\n                asynctasks.forEach(function (at, index) {\r\n                    at.Callback = (function (index) {\r\n                        return function (arg) {\r\n                            if (!timeouted_1[0]) {\r\n                                taskcount_1--;\r\n                                resultcollection_1.push(arg.stepresult);\r\n                                step && step(index, taskcount_1, arg.stepresult, resultcollection_1, arg.err);\r\n                                taskcount_1 == 0 && callback && callback(taskcount_1, resultcollection_1);\r\n                            }\r\n                            else {\r\n                                if (taskcount_1 != 0) {\r\n                                    callback && callback(taskcount_1, resultcollection_1, true);\r\n                                    taskcount_1 = 0;\r\n                                }\r\n                            }\r\n                        };\r\n                    })(index);\r\n                    at.Execute();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            callback(0, null);\r\n        }\r\n    };\r\n    /**\r\n     * 新建一个异步任务\r\n     * @param handle\r\n     * @param delay\r\n     * @param args\r\n     */\r\n    Tasks.New = function (handle, delay, args) {\r\n        return new AsyncTask(handle, delay, args);\r\n    };\r\n    /**\r\n     * 新建一个 Ajax 任务\r\n     * @param option\r\n     */\r\n    Tasks.Ajax = function (option) {\r\n        return new AjaxTask(option);\r\n    };\r\n    return Tasks;\r\n}());\r\nexports.Tasks = Tasks;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./RectPlayer/RectPlayer.ts\");\n"],"sourceRoot":""}